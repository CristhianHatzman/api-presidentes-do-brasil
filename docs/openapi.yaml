openapi: 3.0.0
info:
  title: API de Presidentes do Brasil
  description: Uma API para gerenciar informações de presidentes e usuários.
  version: 1.0.0

servers:
  - url: http://localhost:3500
    description: Servidor de Desenvolvimento Local

tags:
  - name: Presidentes
    description: Operações relacionadas a presidentes.
  - name: Usuários
    description: Operações relacionadas a usuários e autenticação.

paths:
  /user/register:
    post:
      summary: Registrar novo usuário
      description: Cria um novo usuário no sistema.
      tags:
        - Usuários
      requestBody:
        description: Dados do usuário a ser criado.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'João Silva'
                email:
                  type: string
                  format: email
                  example: 'joao@email.com'
                password:
                  type: string
                  example: 'senhaSecreta123'
                fone:
                  type: number
                  example: 11999999999
              required:
                - name
                - email
                - password
                - fone
      responses:
        '201':
          description: Created. Usuário criado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: "Usuário criado com sucesso!"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Erro interno no servidor."

  /user/login:
    post:
      summary: Login de usuário
      description: Autentica um usuário e retorna um token JWT.
      tags:
        - Usuários
      requestBody:
        description: Credenciais de login.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "usuario@email.com"
                password:
                  type: string
                  example: "minhasenha123"
              required:
                - email
                - password
      responses:
        '200':
          description: OK. Login realizado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Erro ao gerar token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Erro ao gerar token."
        '401':
          description: Credenciais incorretas.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Credenciais incorretas."
        '404':
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Usuário não encontrado."
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Erro interno no servidor."

  /presidents/view:
    get:
      summary: Buscar todos os presidentes
      description: Retorna uma lista de todos os presidentes cadastrados.
      tags:
        - Presidentes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK. Uma lista de presidentes retornada com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  presidents:
                    type: array
                    items:
                      $ref: '#/components/schemas/President'
        '401':
          description: Token inválido para continuar.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Token inválido para continuar."
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Erro interno no servidor."

  /presidents/insert:
    post:
      summary: Criar novo presidente
      description: Cria um novo registro de presidente no banco de dados.
      tags:
        - Presidentes
      security:
        - bearerAuth: []
      requestBody:
        description: Dados do presidente a ser criado.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Getúlio Vargas'
                birthDate:
                  type: string
                  format: date
                  example: '1882-04-19'
                deathDate:
                  type: string
                  format: date
                  example: '1954-08-24'
                birthPlace:
                  type: string
                  example: 'São Borja, Rio Grande do Sul'
                profession:
                  type: string
                  example: 'Advogado e Político'
                mandates:
                  type: array
                  items:
                    $ref: '#/components/schemas/Mandate'
                biography:
                  type: string
                  example: 'Getúlio Dornelles Vargas foi um advogado e político brasileiro...'
                imageUrl:
                  type: string
                  format: url
                  example: 'https://exemplo.com/getulio-vargas.jpg'
                curiosities:
                  type: string
                  example: 'Foi presidente por 15 anos não consecutivos.'
              required:
                - name
                - birthDate
                - profession
                - mandates
                - biography
      responses:
        '201':
          description: Created. Presidente criado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Presidente criado com sucesso!"
        '401':
          description: Token inválido para continuar.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Token inválido para continuar."
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Erro interno no servidor."

  /presidents/view/{id}:
    get:
      summary: Buscar presidente por ID
      description: Retorna um único presidente com base em seu ID.
      tags:
        - Presidentes
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: O ID do presidente a ser buscado.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. Presidente encontrado e retornado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  president:
                    $ref: '#/components/schemas/President'
        '400':
          description: ID inválido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "ID inválido."
        '401':
          description: Token inválido para continuar.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Token inválido para continuar."
        '404':
          description: Presidente não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Presidente não encontrado."
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Erro interno no servidor."

  /presidents/alter/{id}:
    put:
      summary: Atualizar presidente
      description: Atualiza os dados de um presidente existente com base em seu ID.
      tags:
        - Presidentes
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: O ID do presidente a ser atualizado.
          required: true
          schema:
            type: string
      requestBody:
        description: Dados do presidente a serem atualizados.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Getúlio Vargas'
                birthDate:
                  type: string
                  format: date
                  example: '1882-04-19'
                deathDate:
                  type: string
                  format: date
                  example: '1954-08-24'
                birthPlace:
                  type: string
                  example: 'São Borja, Rio Grande do Sul'
                profession:
                  type: string
                  example: 'Advogado e Político'
                mandates:
                  type: array
                  items:
                    $ref: '#/components/schemas/Mandate'
                biography:
                  type: string
                  example: 'Getúlio Dornelles Vargas foi um advogado e político brasileiro...'
                imageUrl:
                  type: string
                  format: url
                  example: 'https://exemplo.com/getulio-vargas.jpg'
                curiosities:
                  type: string
                  example: 'Foi presidente por 15 anos não consecutivos.'
              required:
                - name
                - birthDate
                - profession
                - mandates
                - biography
      responses:
        '200':
          description: OK. Presidente atualizado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Presidente atualizado com sucesso!"
        '400':
          description: ID inválido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "ID inválido."
        '401':
          description: Token inválido para continuar.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Token inválido para continuar."
        '404':
          description: Presidente não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Presidente não encontrado."
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Erro interno no servidor."

  /presidents/drop/{id}:
    delete:
      summary: Deletar presidente
      description: Deleta um presidente do banco de dados com base em seu ID.
      tags:
        - Presidentes
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: O ID do presidente a ser deletado.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. Presidente deletado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Presidente deletado com sucesso!"
        '400':
          description: ID inválido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "ID inválido."
        '401':
          description: Token inválido para continuar.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Token inválido para continuar."
        '404':
          description: Presidente não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Presidente não encontrado."
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Erro interno no servidor."

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: '60c72b2f9b1d8c1e2f3a4b5c'
        name:
          type: string
          example: 'João Silva'
        email:
          type: string
          format: email
          example: 'joao@email.com'
        password:
          type: string
          example: 'senhaSecreta123'
        fone:
          type: number
          example: 11999999999

    Mandate:
      type: object
      properties:
        startDate:
          type: string
          format: date
          example: '1950-01-31'
        endDate:
          type: string
          format: date
          example: '1955-01-31'
        vicePresident:
          type: string
          example: 'José dos Santos'
        party:
          type: string
          example: 'Partido Democrático'
        achievements:
          type: array
          items:
            type: string
          example: ['Criação da Petrobras', 'Consolidação das Leis do Trabalho']

    President:
      type: object
      properties:
        _id:
          type: string
          example: '60c72b2f9b1d8c1e2f3a4b5c'
        name:
          type: string
          example: 'Getúlio Vargas'
        birthDate:
          type: string
          format: date
          example: '1882-04-19'
        deathDate:
          type: string
          format: date
          example: '1954-08-24'
        birthPlace:
          type: string
          example: 'São Borja, Rio Grande do Sul'
        profession:
          type: string
          example: 'Advogado e Político'
        mandates:
          type: array
          items:
            $ref: '#/components/schemas/Mandate'
        biography:
          type: string
          example: 'Getúlio Dornelles Vargas foi um advogado e político brasileiro...'
        imageUrl:
          type: string
          format: url
          example: 'https://exemplo.com/getulio-vargas.jpg'
        curiosities:
          type: string
          example: 'Foi presidente por 15 anos não consecutivos.'